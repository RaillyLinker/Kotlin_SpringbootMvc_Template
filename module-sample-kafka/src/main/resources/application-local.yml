# (실행 환경 local 설정)
# : 로컬 환경 개발자를 위한 환경 설정 = 서버 개발자가 마음껏 사용 가능 (그냥 IDE 를 실행하면 적용)

spring:
  application:
    # Eureka 에 등록될 서비스 이름 (복제 서버는 같은 이름으로 설정하여 로드밸런싱)
    name: SAMPLE-KAFKA-LOCAL

  config:
    activate: # 프로필명 설정
      on-profile: local

  servlet:
    multipart:
      # !!!multipart 데이터량 설정!!!
      maxFileSize: 50MB
      maxRequestSize: 50MB

  boot:
    admin:
      client:
        # Spring Admin 등록
        auto-registration: true
        # Spring Admin 서버 위치
        url: http://127.0.0.1:9090
        instance:
          # 내 서버 접속 주소
          service-url: http://127.0.0.1:12005
          # 내 서버 이름
          name: SAMPLE-KAFKA-LOCAL
        # Spring Admin 인증/인가 정보
        username: admin
        password: qwer1234

logging:
  file:
    # Spring Admin 로그 모니터링 파일
    name: ./by_product_files/sample_kafka/logs/current_log.log

springdoc:
  swagger-ui:
    enabled: true # Swagger 문서 공개 여부

# eureka 서버에 전달할 정보 설정
eureka:
  instance:
    hostname: localhost
  client:
    # Eureka Client 로 등록
    register-with-eureka: true
    # Eureka 서버에서 레지스트리를 가져올지 여부
    fetch-registry: false
    healthcheck:
      enabled: true  # Eureka 서버가 /actuator/health 엔드포인트로 상태를 확인
    service-url:
      # Eureka 서버 목록
      defaultZone: http://127.0.0.1:10001/eureka/,http://127.0.0.1:10002/eureka/,http://127.0.0.1:10003/eureka/

# Kafka Cluster 설정
kafka-cluster:
  # Kafka 추가
  # 작명법은, 앞에 kafka{index}-{제목} 형식으로 하여, 충돌을 피하기

  # (주 사용 Kafka)
  kafka1-main:
    # Kafka 브로커에 연결하기 위한 주소를 설정합니다. 여러 개의 브로커가 있을 경우, 콤마로 구분하여 나열합니다.
    uri: localhost:9092,localhost:9093,localhost:9094

    # Consumer용 인증 정보
    consumer:
      username: admin
      password: admin-secret

    # Producer용 인증 정보
    producer:
      username: admin
      password: admin-secret

custom-config: # 프로젝트 내에서 사용하는 커스텀 설정
  # cors 허용 리스트 설정 (설정하지 않으면 모든 요청 허용)
  cors-allow-list: http://localhost:8081, http://127.0.0.1:8081, http://localhost:3000, http://127.0.0.1:3000